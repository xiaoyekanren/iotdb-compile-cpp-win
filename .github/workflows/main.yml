name: CI
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-client-cpp-win:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        iotdb_version: [ rel/0.12,rel/0.13,master ]
        os: [ windows-2019,windows-2022 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: get time information
        id: sys-information
        shell: bash
        run: |
          echo "::set-output name=date::$(date +"%Y-%m-%d-%H-%M-%S")"
          echo "::set-output name=java-version::$(java -version 2>&1 |head -n 1 | cut -d ' ' -f 3 | sed 's/"//g')"

      - name: download & unpack boost
        run: |
          C:/msys64/usr/bin/wget.exe -O ${{ github.workspace }}/boost_1_78_0.zip https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.zip
          7z x ${{ github.workspace }}/boost_1_78_0.zip -o${{ github.workspace }}/boost_1_78_0

      - name: install boost
        run: |
          cd ${{ github.workspace }}/boost_1_78_0/boost_1_78_0
          ./bootstrap.bat
          ./b2

      - name: download & unpack flex&bison
        shell: cmd
        run: |
          C:msys64/usr/bin/wget.exe -O ${{ github.workspace }}/win_flex_bison-latest.zip https://jaist.dl.sourceforge.net/project/winflexbison/win_flex_bison-latest.zip
          7z x ${{ github.workspace }}/win_flex_bison-latest.zip -o${{ github.workspace }}/win_flex_bison-latest

      - name: install openssl
        run: |
          choco install openssl

      - name: Checkout apache/iotdb
        uses: actions/checkout@v2
        with:
          path: iotdb
          repository: 'apache/iotdb'
          ref: ${{ matrix.iotdb_version }}
          fetch-depth: 0

      - name: get iotdb information
        id: iotdb-information
        shell: bash
        run: |
          cd iotdb
          echo "::set-output name=commit::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::$(git branch |grep ^*|cut -d ' ' -f 2)"
          echo "::set-output name=iotdb-version::$(cat pom.xml  | egrep '^    <version>'|sed 's# ##g'|  sed 's#<version>##g' | sed 's#</version>##g')"

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2019' }}
        run: |
          export PATH=$PATH:${{ github.workspace }}/win_flex_bison-latest
#          set Path=%Path%;${{ github.workspace }}/win_flex_bison-latest
#          set Path
          cd ${{ github.workspace }}/iotdb
          mvn package -Dcmake.generator="Visual Studio 16 2019" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="${{ github.workspace }}/boost_1_78_0/boost_1_78_0" -Dboost.library.dir="${{ github.workspace }}/boost_1_78_0/boost_1_78_0/stage/lib" -Dcmake.url="https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip" -Dcmake.root.dir="${{ github.workspace }}/iotdb/compile-tools/thrift/target/cmake-3.23.1-windows-x86_64"

      - name: compile client-cpp
        if: ${{ matrix.os == 'windows-2022' }}
        run: |
          export PATH=$PATH:${{ github.workspace }}/win_flex_bison-latest
#          set Path=%Path%;${{ github.workspace }}/win_flex_bison-latest
#          set Path
          cd ${{ github.workspace }}/iotdb
          mvn package -Dcmake.generator="Visual Studio 17 2022" -P compile-cpp -pl server,client-cpp,example/client-cpp-example -am -DskipTests -Dboost.include.dir="${{ github.workspace }}/boost_1_78_0/boost_1_78_0" -Dboost.library.dir="${{ github.workspace }}/boost_1_78_0/boost_1_78_0/stage/lib" -Dcmake.url="https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1-windows-x86_64.zip" -Dcmake.root.dir="${{ github.workspace }}/iotdb/compile-tools/thrift/target/cmake-3.23.1-windows-x86_64"
